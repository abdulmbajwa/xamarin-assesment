name: Android-CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

jobs:
  
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

#       - name: Setup iOS Certificates
#         uses: apple-actions/import-codesign-certs@v1
#         with: 
#           p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
#           p12-password: ${{ secrets.CERTIFICATES_P12_PASSWORD }}
#           keychain: github-actions-xamarin
#           keychain-password: ''

#       - name: Setup iOS Provisioning Profiles
#         uses: apple-actions/download-provisioning-profiles@v1
#         with: 
#           bundle-id: 'dev.sbyte.github-actions-xamarin'
#           profile-type: 'IOS_APP_ADHOC'
#           issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
#           api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
#           api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}

      - name: Setup Android signing
    
        run: |
            $FileName = "XamarinTest\XamarinTest.Android\keystore.jks"
            [byte[]]$Bytes = [convert]::FromBase64String("${{ env.KEYSTORE }}")
            [System.IO.File]::WriteAllBytes($FileName,$Bytes)

            
#       - name: Set iOS version
#         run: |
#           /usr/libexec/PlistBuddy -c "Set :CFBundleShortVersionString ${{ secrets.APP_VERSION }}" ./GitHubActions.iOS/Info.plist
#           /usr/libexec/PlistBuddy -c "Set :CFBundleVersion ${{ github.run_number }}" ./GitHubActions.iOS/Info.plist

      - name: Set Android version
        uses: damienaicheh/update-android-version-manifest-action@v1.0.0
        with:
          android-manifest-path: ./XamarinTest/XamarinTest.Android/Properties/AndroidManifest.xml
          version-name: ${{ secrets.APP_VERSION }}
          version-code: ${{ github.run_number }}
          print-file: true

      - name: Restore NuGet packages
        run: nuget restore

#       - name: Build iOS
#         run: MSBuild /t:Build /p:Configuration=Release /p:Platform=iPhone /p:BuildIpa=true ./GitHubActions.iOS/GitHubActions.iOS.csproj
        
      - name: Build Android
        run: MSBuild /t:SignAndroidPackage /p:Configuration=Release /p:AndroidPackageFormat=apk /p:AndroidKeyStore=true /p:AndroidSigningKeyAlias=xamarintest /p:AndroidSigningKeyPass=${{ secrets.KEYSTORE_PASSWORD }} /p:AndroidSigningKeyStore=keystore.jks /p:AndroidSigningStorePass=${{ secrets.KEYSTORE_PASSWORD }} ./XamarinTest/XamarinTest.Android/XamarinTest.Android.csproj
        
      - name: Setup App Center CLI
        run: npm install -g appcenter-cli

      - name: 'Build UI Test'
        shell: pwsh # For Linux, use bash
        run: |
          pushd './UITest'
          dotnet build --configuration Release --output ./output
          popd

#       - name: Upload iOS app to App Center
#         run: appcenter distribute release --silent --file ./GitHubActions.iOS/bin/iPhone/Release/GitHubActions.iOS.ipa --app SByteDev/GitHubActions.Xamarin-iOS --group Collaborators --token ${{ secrets.APP_CENTER_TOKEN }}
      - name: Run tests UI Tests in App Center
        run: appcenter test run uitest --app "abdulrahimbajwa/xamarin-test" --devices 920eea75 --app-path ./XamarinTest/XamarinTest.Android/bin/Release/com.companyname.xamarintest.apk --test-series "master" --locale "en_US" --build-dir ./UITest/output

      - name: Upload Android app to App Center
        run: appcenter distribute release --silent --file ./XamarinTest/XamarinTest.Android/bin/Release/com.companyname.xamarintest.apk --app SByteDev/XamarinTest.Xamarin-Android --group Collaborators --token ${{ secrets.APP_CENTER_TOKEN }}
